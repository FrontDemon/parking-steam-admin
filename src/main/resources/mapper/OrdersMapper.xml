<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smdm.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.smdm.bean.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="lot_id" jdbcType="INTEGER" property="lotId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap id="BaseResultMapWithDetails" type="com.smdm.bean.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="lot_id" jdbcType="INTEGER" property="lotId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association property="user" javaType="com.smdm.bean.User">
		<id column="u_id" jdbcType="INTEGER" property="id" />
	    <result column="u_phone" jdbcType="VARCHAR" property="phone" />
	    <result column="u_name" jdbcType="VARCHAR" property="name" />
	    <result column="u_license_num" jdbcType="VARCHAR" property="licenseNum" />
	</association>
	<association property="lot" javaType="com.smdm.bean.Lot">
		<id column="l_id" jdbcType="INTEGER" property="id" />
	    <result column="l_number" jdbcType="VARCHAR" property="number" />
	</association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, lot_id, order_time, price, total, status
  </sql>
  <sql id="With_Details_Column_List">
    o.id, o.user_id, o.lot_id, o.order_time, o.price, o.total, o.status,
    u.id "u_id", u.phone "u_phone", u.name "u_name", u.license_num "u_license_num",
    l.id "l_id", l.number "l_number"
  </sql>
  <select id="selectByExample" parameterType="com.smdm.bean.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyWithDetails" parameterType="java.lang.Integer" resultMap="BaseResultMapWithDetails">
    select 
    <include refid="With_Details_Column_List" />
    from orders o
    LEFT JOIN user u on o.user_id=u.id
    LEFT JOIN lot l on o.lot_id=l.id
    where o.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllWithDetails" parameterType="java.lang.Integer" resultMap="BaseResultMapWithDetails">
    select 
    <include refid="With_Details_Column_List" />
    from orders o
    LEFT JOIN user u on o.user_id=u.id
    LEFT JOIN lot l on o.lot_id=l.id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smdm.bean.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smdm.bean.Orders">
    insert into orders (id, user_id, lot_id, 
      order_time, price, total, 
      status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{lotId,jdbcType=INTEGER}, 
      #{orderTime,jdbcType=TIMESTAMP}, #{price,jdbcType=DOUBLE}, #{total,jdbcType=DOUBLE}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.smdm.bean.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="lotId != null">
        lot_id,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="lotId != null">
        #{lotId,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smdm.bean.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.lotId != null">
        lot_id = #{record.lotId,jdbcType=INTEGER},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      lot_id = #{record.lotId,jdbcType=INTEGER},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DOUBLE},
      total = #{record.total,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smdm.bean.Orders">
    update orders
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="lotId != null">
        lot_id = #{lotId,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smdm.bean.Orders">
    update orders
    set user_id = #{userId,jdbcType=INTEGER},
      lot_id = #{lotId,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DOUBLE},
      total = #{total,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>